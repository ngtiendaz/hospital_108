import { TinhTrangSucKhoe } from '../model/tinhTrangModel';

const BASE_URL = 'http://localhost:3000/';
// API ƒë·ªÉ l·∫•y danh s√°ch t√¨nh tr·∫°ng s·ª©c kh·ªèe theo m√£ b·ªánh √°n
const API_GET = BASE_URL + 'api/v1/tinhtrangbenh/'; 
// API ƒë·ªÉ c·∫≠p nh·∫≠t (th√™m m·ªõi) m·ªôt t√¨nh tr·∫°ng s·ª©c kh·ªèe
const API_UPDATE = BASE_URL + 'api/v1/tinhtrangbenh/capnhattinhtrang';

export const tinhTrangSucKhoeController = {
  /**
   * ü©∫ L·∫•y danh s√°ch t√¨nh tr·∫°ng s·ª©c kh·ªèe c·ªßa m·ªôt b·ªánh √°n
   * @param maBenhAn M√£ c·ªßa b·ªánh √°n c·∫ßn l·∫•y th√¥ng tin
   * @returns M·∫£ng c√°c ƒë·ªëi t∆∞·ª£ng TinhTrangSucKhoe
   */
  async getByMaBenhAn(maBenhAn: number): Promise<TinhTrangSucKhoe[]> {
    try {
      const res = await fetch(`${API_GET}${maBenhAn}`, { cache: 'no-store' });
      if (!res.ok) {
        throw new Error(`L·ªói khi g·ªçi API l·∫•y t√¨nh tr·∫°ng s·ª©c kh·ªèe: ${res.status}`);
      }
      const data = await res.json();
      return data as TinhTrangSucKhoe[];
    } catch (err) {
      console.error('‚ùå L·ªói khi l·∫•y danh s√°ch t√¨nh tr·∫°ng s·ª©c kh·ªèe:', err);
      return [];
    }
  },

  /**
   * ‚ûï C·∫≠p nh·∫≠t (th√™m m·ªõi) t√¨nh tr·∫°ng s·ª©c kh·ªèe cho b·ªánh √°n
   * @param data D·ªØ li·ªáu t√¨nh tr·∫°ng s·ª©c kh·ªèe m·ªõi
   * @returns boolean cho bi·∫øt th√†nh c√¥ng hay th·∫•t b·∫°i
   */
  async update(
    data: {
      maBenhAn: number;
      ngay: string;
      tinhTrang: string;
      ghiChu: string;
    }
  ): Promise<boolean> {
    try {
      const res = await fetch(API_UPDATE, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json', // Quan tr·ªçng: Body l√† JSON
        },
        body: JSON.stringify(data), // Chuy·ªÉn ƒë·ªïi object th√†nh chu·ªói JSON
      });

      if (!res.ok) {
        const errorBody = await res.text();
        console.error(`‚ùå L·ªói API khi c·∫≠p nh·∫≠t t√¨nh tr·∫°ng s·ª©c kh·ªèe ${res.status}:`, errorBody);
        return false;
      }
      console.log('‚úÖ C·∫≠p nh·∫≠t t√¨nh tr·∫°ng s·ª©c kh·ªèe th√†nh c√¥ng!');
      return true;
    } catch (err) {
      console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t t√¨nh tr·∫°ng s·ª©c kh·ªèe:', err);
      return false;
    }
  },
};