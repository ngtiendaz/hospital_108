import { BenhNhanNoiTru } from '../model/benhNhanNoiTruModel';
// ‚úÖ Import controller c·ªßa h·ªì s∆° b·ªánh √°n ƒë·ªÉ ki·ªÉm tra
import { hoSoBenhAnController } from '../../MedicalRecords/controller/medicalRecordController'; // S·ª≠a ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn
import { APIs } from '../../../config/apiConfig';
const BASE_URL = APIs;
const API = BASE_URL + 'api/v1/nhapvien';

// H√†m helper ƒë·ªÉ l·∫•y to√†n b·ªô danh s√°ch b·ªánh nh√¢n n·ªôi tr√∫ (ch∆∞a l·ªçc)
const getAllRawInpatients = async (): Promise<BenhNhanNoiTru[]> => {
  try {
    const res = await fetch(API, { cache: 'no-store' });
    if (!res.ok) {
      throw new Error(`L·ªói khi g·ªçi API danh s√°ch nh·∫≠p vi·ªán: ${res.status}`);
    }
    return await res.json();
  } catch (err) {
    console.error('‚ùå L·ªói khi l·∫•y danh s√°ch n·ªôi tr√∫ (raw):', err);
    return [];
  }
};


export const benhNhanNoiTruController = {
  /**
   * üìò L·∫•y danh s√°ch b·ªánh nh√¢n n·ªôi tr√∫ CH∆ØA C√ì h·ªì s∆° b·ªánh √°n.
   * H√†m n√†y s·∫Ω l·ªçc nh·ªØng b·ªánh nh√¢n ƒë√£ c√≥ h·ªì s∆° ra kh·ªèi danh s√°ch.
   */
  async getAll(): Promise<BenhNhanNoiTru[]> {
    try {
      // B∆∞·ªõc 1: L·∫•y danh s√°ch m√£ nh·∫≠p vi·ªán t·ª´ c√°c h·ªì s∆° b·ªánh √°n ƒë√£ t·ªìn t·∫°i
      const existingRecords = await hoSoBenhAnController.getAll();
      const idsWithRecord = new Set(existingRecords.map(record => record.maNhapVien));

      // B∆∞·ªõc 2: L·∫•y to√†n b·ªô danh s√°ch b·ªánh nh√¢n ƒëang n·ªôi tr√∫
      const allInpatients = await getAllRawInpatients();

      // B∆∞·ªõc 3: L·ªçc ra nh·ªØng b·ªánh nh√¢n c√≥ maNhapVien kh√¥ng n·∫±m trong danh s√°ch ƒë√£ c√≥ h·ªì s∆°
      const availableInpatients = allInpatients.filter(
        (patient) => !idsWithRecord.has(Number(patient.maNhapVien))
      );
      
      console.log('‚úÖ ƒê√£ l·ªçc, danh s√°ch b·ªánh nh√¢n c√≥ th·ªÉ t·∫°o h·ªì s∆°:', availableInpatients.length);
      return availableInpatients;

    } catch (err) {
      console.error('‚ùå L·ªói khi l·ªçc danh s√°ch b·ªánh nh√¢n n·ªôi tr√∫ ch∆∞a c√≥ h·ªì s∆°:', err);
      return [];
    }
  },
  
  /**
   * üåê L·∫•y TO√ÄN B·ªò danh s√°ch b·ªánh nh√¢n n·ªôi tr√∫ (kh√¥ng l·ªçc).
   * D√πng ƒë·ªÉ cho c√°c controller kh√°c ki·ªÉm tra s·ª± t·ªìn t·∫°i.
   */
  async getAllRaw(): Promise<BenhNhanNoiTru[]> {
      return getAllRawInpatients();
  },
};